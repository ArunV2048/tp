@startuml

package "Parser classes" {
    Class "<<interface>>\nParser" as Parser
    Class AddressBookParser
    Class XYZCommandParser
    Class CliSyntax
    Class ArgumentTokenizer
    Class ArgumentMultimap
    Class ParserUtil
    Class Command
    Class XYZCommand
    Class Prefix
}

package Model {
    Class Session
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> AddressBookParser

AddressBookParser .down.> XYZCommandParser: <<create>>

XYZCommandParser ..> XYZCommand : <<create>>
AddressBookParser ..> Command : <<use>>
XYZCommandParser .up.|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
ArgumentTokenizer .left.> ArgumentMultimap
XYZCommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil .down.> Prefix
ArgumentTokenizer .down.> Prefix
ParserUtil ..> Session : parses

note right of ParserUtil
  Delegates to Session.fromString(...)
  to support multi-slot weekly/biweekly input.
end note

XYZCommand -up-|> Command
@enduml
